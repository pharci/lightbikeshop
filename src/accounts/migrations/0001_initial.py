# Generated by Django 5.2.7 on 2025-10-17 18:01

import accounts.models
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='EmailOTP',
            fields=[
                ('request_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254)),
                ('code_hmac', models.CharField(max_length=64)),
                ('secret_id', models.CharField(max_length=64)),
                ('expires_at', models.DateTimeField()),
                ('consumed_at', models.DateTimeField(blank=True, null=True)),
                ('attempts', models.PositiveSmallIntegerField(default=0)),
                ('max_attempts', models.PositiveSmallIntegerField(default=5)),
                ('ip', models.GenericIPAddressField(blank=True, null=True)),
                ('ua', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Заявка OTP (email)',
                'verbose_name_plural': 'Заявки OTP (email)',
                'indexes': [models.Index(fields=['email', 'created_at'], name='accounts_em_email_adc4a4_idx'), models.Index(fields=['expires_at'], name='accounts_em_expires_2be763_idx')],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, verbose_name='Почта')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='Фамилия')),
                ('telegram_id', models.CharField(blank=True, max_length=200, null=True, verbose_name='Telegram Id')),
                ('telegram_username', models.CharField(blank=True, max_length=200, null=True, verbose_name='Telegram Username')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный?')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал?')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='Последний вход')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Создан')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
                'indexes': [models.Index(fields=['email'], name='accounts_us_email_74c8d6_idx')],
            },
            managers=[
                ('objects', accounts.models.UserManager()),
            ],
        ),
    ]
